---
apiVersion: v1
kind: Secret
metadata:
  name: embeddings-auth
  namespace: {{ .Values.namespace.name }}
stringData:
  token: {{ .Values.ragSupportApp.authTokens.embeddingsAuth.token | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: rag-llm-auth
  namespace: {{ .Values.namespace.name }}
stringData:
  token: {{ .Values.ragSupportApp.authTokens.ragLlmAuth.token | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: agent-llm-auth
  namespace: {{ .Values.namespace.name }}
stringData:
  token: {{ .Values.ragSupportApp.authTokens.agentLlmAuth.token | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: s3-auth
  namespace: {{ .Values.namespace.name }}
stringData:
  access_key: {{ .Values.ragSupportApp.authTokens.s3Auth.accessKey }}
  secret_key: {{ .Values.ragSupportApp.authTokens.s3Auth.secretKey }}
{{- if .Values.ragSupportApp.ingestionService.enabled }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ingestion-service-pvc
  namespace: {{ .Values.namespace.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.ragSupportApp.ingestionService.persistence.size }}
  volumeMode: Filesystem
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ingestion-service
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingestion-service
  template:
    metadata:
      labels:
        app: ingestion-service
    spec:
      volumes:
        - name: s3-download-folder
          persistentVolumeClaim:
            claimName: ingestion-service-pvc
      containers:
        - resources:
            limits:
              cpu: {{ .Values.ragSupportApp.ingestionService.resources.limits.cpu }}
              memory: {{ .Values.ragSupportApp.ingestionService.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ragSupportApp.ingestionService.resources.requests.cpu }}
              memory: {{ .Values.ragSupportApp.ingestionService.resources.requests.memory }}
          name: ingestion-service
          imagePullPolicy: {{ .Values.ragSupportApp.ingestionService.image.pullPolicy }}
          env:
            - name: EMBEDDINGS_AUTH
              valueFrom:
                secretKeyRef:
                  name: embeddings-auth
                  key: token
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-auth
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-auth
                  key: secret_key
          volumeMounts:
            - name: s3-download-folder
              mountPath: /s3-data
          args:
          - s3-ingest
          - -m
          - {{ .Values.ragSupportApp.ingestionService.config.embeddingsModel }}
          - -em-api
          - {{ .Values.ragSupportApp.ingestionService.config.embeddingsApi }}
          - -ek
          - $(EMBEDDINGS_AUTH)
          - -b
          - {{ .Values.ragSupportApp.ingestionService.config.bucket }}
          - -p
          - {{ .Values.ragSupportApp.ingestionService.config.prefix }}
          - -e
          - {{ .Values.ragSupportApp.ingestionService.config.s3Endpoint }}
          - -ak
          - $(S3_ACCESS_KEY)
          - -sk
          - $(S3_SECRET_KEY)
          {{- if .Values.ragSupportApp.ingestionService.config.insecureSkipTls }}
          - --insecure-skip-tls
          {{- end }}
          - --db-endpoint
          - {{ .Values.ragSupportApp.ingestionService.config.chromaEndpoint }}
          - --s3-download-folder
          - /s3-data
          terminationMessagePolicy: File
          image: {{ .Values.ragSupportApp.ingestionService.image.repository }}:{{ .Values.ragSupportApp.ingestionService.image.tag }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}
{{- if .Values.ragSupportApp.ragService.enabled }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rag-service
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-service
  template:
    metadata:
      labels:
        app: rag-service
    spec:
      containers:
        - resources:
            limits:
              cpu: {{ .Values.ragSupportApp.ragService.resources.limits.cpu }}
              memory: {{ .Values.ragSupportApp.ragService.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ragSupportApp.ragService.resources.requests.cpu }}
              memory: {{ .Values.ragSupportApp.ragService.resources.requests.memory }}
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: rag-service
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
          imagePullPolicy: {{ .Values.ragSupportApp.ragService.image.pullPolicy }}
          env:
            - name: EMBEDDINGS_AUTH
              valueFrom:
                secretKeyRef:
                  name: embeddings-auth
                  key: token
            - name: LLM_AUTH
              valueFrom:
                secretKeyRef:
                  name: rag-llm-auth
                  key: token
          terminationMessagePolicy: File
          image: {{ .Values.ragSupportApp.ragService.image.repository }}:{{ .Values.ragSupportApp.ragService.image.tag }}
          args:
          - rag-api
          - -m
          - {{ .Values.ragSupportApp.ragService.config.llmModel }}
          - -llm-api
          - {{ .Values.ragSupportApp.ragService.config.llmApi }}
          - -em
          - {{ .Values.ragSupportApp.ragService.config.embeddingsModel }}
          - -em-api
          - {{ .Values.ragSupportApp.ragService.config.embeddingsApi }}
          - -ek
          - $(EMBEDDINGS_AUTH)
          - -lk
          - $(LLM_AUTH)
          - -p
          - "8080"
          - --context-window-length
          - {{ .Values.ragSupportApp.ragService.config.contextWindowLength | quote }}
          {{- if .Values.ragSupportApp.ragService.config.insecureSkipTls }}
          - --insecure-skip-tls
          {{- end }}
          - --db-endpoint
          - {{ .Values.ragSupportApp.ragService.config.chromaEndpoint }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: rag-service
  namespace: {{ .Values.namespace.name }}
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: 8080
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: rag-service
{{- end }}
{{- if .Values.ragSupportApp.chatbotUi.enabled }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rag-chatbot-ui
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-chatbot-ui
  template:
    metadata:
      labels:
        app: rag-chatbot-ui
    spec:
      containers:
        - resources:
            limits:
              cpu: {{ .Values.ragSupportApp.chatbotUi.resources.limits.cpu }}
              memory: {{ .Values.ragSupportApp.chatbotUi.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ragSupportApp.chatbotUi.resources.requests.cpu }}
              memory: {{ .Values.ragSupportApp.chatbotUi.resources.requests.memory }}
          readinessProbe:
            tcpSocket:
              port: 8181
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: rag-chatbot-ui
          livenessProbe:
            tcpSocket:
              port: 8181
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8181
          imagePullPolicy: {{ .Values.ragSupportApp.chatbotUi.image.pullPolicy }}
          terminationMessagePolicy: File
          image: {{ .Values.ragSupportApp.chatbotUi.image.repository }}:{{ .Values.ragSupportApp.chatbotUi.image.tag }}
          args:
          - chatbot
          - -p
          - "8181"
          - --rag-api-endpoint
          - {{ .Values.ragSupportApp.chatbotUi.config.ragApiEndpoint }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: rag-chatbot-ui
  namespace: {{ .Values.namespace.name }}
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: ui
      protocol: TCP
      port: 8181
      targetPort: 8181
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: rag-chatbot-ui
{{- if .Values.ragSupportApp.routes.chatbotUi.enabled }}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: rag-chatbot-ui
  namespace: {{ .Values.namespace.name }}
spec:
  to:
    kind: Service
    name: rag-chatbot-ui
    weight: 100
  port:
    targetPort: ui
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
{{- end }}
{{- end }}
{{- if .Values.ragSupportApp.agentUi.enabled }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: rag-agent-ui
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-agent-ui
  template:
    metadata:
      labels:
        app: rag-agent-ui
    spec:
      containers:
        - resources:
            limits:
              cpu: {{ .Values.ragSupportApp.agentUi.resources.limits.cpu }}
              memory: {{ .Values.ragSupportApp.agentUi.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ragSupportApp.agentUi.resources.requests.cpu }}
              memory: {{ .Values.ragSupportApp.agentUi.resources.requests.memory }}
          readinessProbe:
            tcpSocket:
              port: 8282
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: rag-agent-ui
          livenessProbe:
            tcpSocket:
              port: 8282
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8181
          imagePullPolicy: {{ .Values.ragSupportApp.agentUi.image.pullPolicy }}
          env:
            - name: LLM_AUTH
              valueFrom:
                secretKeyRef:
                  name: agent-llm-auth
                  key: token
          terminationMessagePolicy: File
          image: {{ .Values.ragSupportApp.agentUi.image.repository }}:{{ .Values.ragSupportApp.agentUi.image.tag }}
          args:
          - agent
          - -p
          - "8282"
          - --rag-api-endpoint
          - {{ .Values.ragSupportApp.agentUi.config.ragApiEndpoint }}
          - -m
          - {{ .Values.ragSupportApp.agentUi.config.model }}
          - -llm-api
          - {{ .Values.ragSupportApp.agentUi.config.llmApiEndpoint }}
          - -lk
          - $(LLM_AUTH)
          - -w
          - {{ .Values.ragSupportApp.agentUi.config.contextWindowLength | quote }}
          {{- if .Values.ragSupportApp.agentUi.config.insecureSkipTls }}
          - --insecure-skip-tls
          {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: Service
apiVersion: v1
metadata:
  name: rag-agent-ui
  namespace: {{ .Values.namespace.name }}
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: ui
      protocol: TCP
      port: 8282
      targetPort: 8282
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: rag-agent-ui
{{- if .Values.ragSupportApp.routes.agentUi.enabled }}
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: rag-agent-ui
  namespace: {{ .Values.namespace.name }}
spec:
  to:
    kind: Service
    name: rag-agent-ui
    weight: 100
  port:
    targetPort: ui
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
{{- end }}
{{- end }}